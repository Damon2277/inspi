{
  "timestamp": "2025-09-05T05:56:18.440Z",
  "overallStatus": "failed",
  "checks": {
    "codeQuality": {
      "status": "failed",
      "timestamp": "2025-09-05T05:56:18.442Z",
      "metrics": {
        "eslint": {
          "errors": 1,
          "warnings": 0,
          "fixableIssues": 0,
          "error": "ESLint parsing failed"
        },
        "testCoverage": {
          "percentage": 15,
          "totalLines": 692,
          "coveredLines": 107,
          "uncoveredFiles": [
            {
              "file": "/inspi-ai-platform/src/middleware.ts",
              "coverage": 0
            },
            {
              "file": "/inspi-ai-platform/src/app/layout.tsx",
              "coverage": 0
            },
            {
              "file": "/inspi-ai-platform/src/app/providers.tsx",
              "coverage": 0
            },
            {
              "file": "/inspi-ai-platform/src/app/api/health/route.ts",
              "coverage": 0
            },
            {
              "file": "/inspi-ai-platform/src/components/common/Header.tsx",
              "coverage": 0
            },
            {
              "file": "/inspi-ai-platform/src/lib/api.ts",
              "coverage": 0
            },
            {
              "file": "/inspi-ai-platform/src/lib/db-utils.ts",
              "coverage": 51
            },
            {
              "file": "/inspi-ai-platform/src/lib/mongodb.ts",
              "coverage": 0
            },
            {
              "file": "/inspi-ai-platform/src/lib/queryClient.ts",
              "coverage": 0
            },
            {
              "file": "/inspi-ai-platform/src/lib/redis.ts",
              "coverage": 0
            },
            {
              "file": "/inspi-ai-platform/src/lib/database/index.ts",
              "coverage": 0
            },
            {
              "file": "/inspi-ai-platform/src/lib/database/operations.ts",
              "coverage": 0
            },
            {
              "file": "/inspi-ai-platform/src/lib/database/test-connection.ts",
              "coverage": 0
            },
            {
              "file": "/inspi-ai-platform/src/lib/middleware/auth.ts",
              "coverage": 0
            },
            {
              "file": "/inspi-ai-platform/src/lib/middleware/rateLimit.ts",
              "coverage": 0
            },
            {
              "file": "/inspi-ai-platform/src/lib/models/ContributionLog.ts",
              "coverage": 0
            },
            {
              "file": "/inspi-ai-platform/src/lib/models/KnowledgeGraph.ts",
              "coverage": 0
            },
            {
              "file": "/inspi-ai-platform/src/lib/models/User.ts",
              "coverage": 45
            },
            {
              "file": "/inspi-ai-platform/src/lib/models/Work.ts",
              "coverage": 71
            },
            {
              "file": "/inspi-ai-platform/src/lib/models/index.ts",
              "coverage": 0
            },
            {
              "file": "/inspi-ai-platform/src/lib/utils/errorHandler.ts",
              "coverage": 0
            },
            {
              "file": "/inspi-ai-platform/src/stores/authStore.ts",
              "coverage": 0
            },
            {
              "file": "/inspi-ai-platform/src/utils/constants.ts",
              "coverage": 67
            },
            {
              "file": "/inspi-ai-platform/src/utils/helpers.ts",
              "coverage": 47
            }
          ]
        },
        "codeComplexity": {
          "averageComplexity": 1,
          "totalFunctions": 14374,
          "highComplexityFunctions": [
            {
              "file": "/inspi-ai-platform/src/lib/graph-visualization/layout-algorithms.ts",
              "function": "apply(nodes: D3Node[], links: D3Edge[], config: La",
              "complexity": 14,
              "line": 41
            }
          ]
        },
        "duplicateCode": {
          "percentage": 11,
          "totalBlocks": 75405,
          "duplicateBlocks": [
            {
              "block": "import { it } from 'date-fns/locale';\nimport { it } from 'date-fns/locale';\nimport { it } from 'date...",
              "locations": [
                {
                  "file": "/inspi-ai-platform/src/__tests__/api/api-error-handling.test.ts",
                  "startLine": 12,
                  "endLine": 16
                },
                {
                  "file": "/inspi-ai-platform/src/__tests__/api/api-error-handling.test.ts",
                  "startLine": 13,
                  "endLine": 17
                }
              ]
            },
            {
              "block": "import { it } from 'date-fns/locale';\nimport { it } from 'date-fns/locale';\nimport { describe } from...",
              "locations": [
                {
                  "file": "/inspi-ai-platform/src/__tests__/api/api-error-handling.test.ts",
                  "startLine": 9,
                  "endLine": 13
                },
                {
                  "file": "/inspi-ai-platform/src/__tests__/api/api-error-handling.test.ts",
                  "startLine": 16,
                  "endLine": 20
                }
              ]
            },
            {
              "block": "import { it } from 'date-fns/locale';\nimport { describe } from 'node:test';\nimport { it } from 'date...",
              "locations": [
                {
                  "file": "/inspi-ai-platform/src/__tests__/api/api-error-handling.test.ts",
                  "startLine": 10,
                  "endLine": 14
                },
                {
                  "file": "/inspi-ai-platform/src/__tests__/api/api-error-handling.test.ts",
                  "startLine": 17,
                  "endLine": 21
                }
              ]
            },
            {
              "block": "import { describe } from 'node:test';\nimport { it } from 'date-fns/locale';\nimport { it } from 'date...",
              "locations": [
                {
                  "file": "/inspi-ai-platform/src/__tests__/api/api-error-handling.test.ts",
                  "startLine": 11,
                  "endLine": 15
                },
                {
                  "file": "/inspi-ai-platform/src/__tests__/api/api-error-handling.test.ts",
                  "startLine": 23,
                  "endLine": 27
                }
              ]
            },
            {
              "block": "import { it } from 'date-fns/locale';\nimport { it } from 'date-fns/locale';\nimport { it } from 'date...",
              "locations": [
                {
                  "file": "/inspi-ai-platform/src/__tests__/api/api-error-handling.test.ts",
                  "startLine": 19,
                  "endLine": 23
                },
                {
                  "file": "/inspi-ai-platform/src/__tests__/api/api-error-handling.test.ts",
                  "startLine": 25,
                  "endLine": 29
                }
              ]
            }
          ]
        },
        "dependencies": {
          "outdated": [
            {
              "name": "@google/generative-ai",
              "version": "^0.24.1",
              "type": "production",
              "reason": "Pre-1.0 version"
            }
          ],
          "vulnerable": [],
          "totalDependencies": 59
        }
      },
      "issues": [
        {
          "type": "eslint_errors",
          "severity": "high",
          "message": "Found 1 ESLint errors (threshold: 0)",
          "count": 1
        },
        {
          "type": "low_coverage",
          "severity": "high",
          "message": "Test coverage is 15% (threshold: 80%)",
          "coverage": 15
        },
        {
          "type": "duplicate_code",
          "severity": "medium",
          "message": "Duplicate code percentage is 11% (threshold: 5%)",
          "percentage": 11
        }
      ],
      "suggestions": [
        {
          "type": "improve_coverage",
          "priority": "high",
          "message": "Add tests for files with low coverage: /inspi-ai-platform/src/middleware.ts, /inspi-ai-platform/src/app/layout.tsx, /inspi-ai-platform/src/app/providers.tsx"
        },
        {
          "type": "reduce_complexity",
          "priority": "medium",
          "message": "Consider refactoring complex functions: apply(nodes: D3Node[], links: D3Edge[], config: La"
        },
        {
          "type": "update_dependencies",
          "priority": "low",
          "message": "Consider updating outdated dependencies: @google/generative-ai"
        }
      ]
    },
    "functionalValidation": {
      "status": "warning",
      "timestamp": "2025-09-05T05:56:41.916Z",
      "testResults": {
        "total": 0,
        "passed": 0,
        "failed": 0,
        "passRate": 0,
        "breakdown": {
          "unit": {
            "passed": 0,
            "failed": 0,
            "total": 0,
            "details": []
          },
          "integration": {
            "passed": 0,
            "failed": 0,
            "total": 0,
            "details": []
          },
          "api": {
            "passed": 0,
            "failed": 0,
            "total": 0,
            "details": []
          }
        }
      },
      "functionalChecks": {
        "unitTests": {
          "status": "error",
          "passed": 0,
          "failed": 0,
          "total": 0,
          "error": "Failed to parse test results"
        },
        "integrationTests": {
          "status": "skipped",
          "message": "No integration tests found",
          "passed": 0,
          "failed": 0,
          "total": 0
        },
        "apiTests": {
          "status": "skipped",
          "message": "Project is not running, cannot test API endpoints",
          "passed": 0,
          "failed": 0,
          "total": 0
        },
        "consistencyCheck": {
          "status": "warning",
          "issues": [
            {
              "type": "outdated_lockfile",
              "severity": "medium",
              "message": "package-lock.json is older than package.json, run npm install"
            }
          ],
          "totalIssues": 1
        }
      },
      "regressionIssues": [],
      "consistencyIssues": []
    },
    "intelligentWarnings": {
      "status": "warning",
      "timestamp": "2025-09-05T05:56:48.758Z",
      "warnings": [
        {
          "id": "high_severity_quality_issues",
          "type": "immediate",
          "severity": "high",
          "message": "Found 2 high-severity quality issues",
          "details": [
            "Found 1 ESLint errors (threshold: 0)",
            "Test coverage is 15% (threshold: 80%)"
          ],
          "actionRequired": true
        },
        {
          "id": "very_low_coverage",
          "type": "immediate",
          "severity": "high",
          "message": "Test coverage is critically low: 15%",
          "recommendation": "Add comprehensive tests to improve coverage",
          "actionRequired": true
        }
      ],
      "patterns": [],
      "recommendations": [
        {
          "priority": "high",
          "category": "code_quality",
          "action": "Fix ESLint errors immediately",
          "command": "cd inspi-ai-platform && npx eslint src --fix",
          "description": "Run ESLint with auto-fix to resolve common issues"
        },
        {
          "priority": "high",
          "category": "testing",
          "action": "Improve test coverage",
          "command": "cd inspi-ai-platform && npm test -- --coverage",
          "description": "Add tests for uncovered code paths, focusing on critical functionality"
        },
        {
          "priority": "high",
          "category": "code_quality",
          "action": "Add tests for files with low coverage: /inspi-ai-platform/src/middleware.ts, /inspi-ai-platform/src/app/layout.tsx, /inspi-ai-platform/src/app/providers.tsx",
          "description": "Automated suggestion from code quality analysis"
        },
        {
          "priority": "medium",
          "category": "code_quality",
          "action": "Consider refactoring complex functions: apply(nodes: D3Node[], links: D3Edge[], config: La",
          "description": "Automated suggestion from code quality analysis"
        },
        {
          "priority": "low",
          "category": "code_quality",
          "action": "Consider updating outdated dependencies: @google/generative-ai",
          "description": "Automated suggestion from code quality analysis"
        }
      ],
      "riskAssessment": {
        "overall": "critical",
        "score": 8,
        "factors": [
          {
            "factor": "Found 2 high-severity quality issues",
            "impact": "high",
            "weight": 3
          },
          {
            "factor": "Test coverage is critically low: 15%",
            "impact": "high",
            "weight": 3
          },
          {
            "factor": "Low test coverage",
            "impact": "medium",
            "weight": 2
          }
        ],
        "recommendation": "Immediate action required. Stop development and address critical issues."
      }
    }
  }
}