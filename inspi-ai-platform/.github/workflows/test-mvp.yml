# MVP测试流水线 - 简化版
name: 🎯 MVP Test Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  NODE_VERSION: '20'
  # 基础配置
  MONGODB_URI: ${{ secrets.MONGODB_URI_TEST }}
  REDIS_URL: ${{ secrets.REDIS_URL_TEST }}
  GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY_TEST }}
  
  # MVP质量门禁 - 降低标准
  COVERAGE_THRESHOLD: '70'
  PERFORMANCE_THRESHOLD: '5000'
  SECURITY_THRESHOLD: '2'

jobs:
  # Phase 1: 基础测试 (2分钟)
  basic-tests:
    name: 🧪 基础测试
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run core unit tests
        run: npm run test:unit:core
      
      - name: Run essential API tests
        run: npm run test:api:core
      
      - name: Check basic coverage
        run: |
          COVERAGE=$(node -p "Math.round(JSON.parse(require('fs').readFileSync('coverage/coverage-summary.json')).total.lines.pct)")
          echo "Coverage: ${COVERAGE}%"
          if [ $COVERAGE -lt $COVERAGE_THRESHOLD ]; then
            echo "❌ Coverage ${COVERAGE}% below threshold ${COVERAGE_THRESHOLD}%"
            exit 1
          fi

  # Phase 2: 扩展测试 (5分钟) - 仅在main分支
  extended-tests:
    name: 🔍 扩展测试
    runs-on: ubuntu-latest
    needs: basic-tests
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Install Playwright
        run: npx playwright install --with-deps chromium
      
      - name: Build app
        run: npm run build
      
      - name: Start app
        run: npm start &
      
      - name: Wait for app
        run: sleep 10
      
      - name: Run E2E tests
        run: npm run test:e2e:core
      
      - name: Run basic performance tests
        run: npm run test:performance:basic

  # Phase 3: 质量门禁 (1分钟)
  quality-gate:
    name: 🚪 质量门禁
    runs-on: ubuntu-latest
    needs: [basic-tests, extended-tests]
    if: always()
    steps:
      - name: Check results
        run: |
          if [ "${{ needs.basic-tests.result }}" = "success" ]; then
            echo "✅ 基础测试通过"
          else
            echo "❌ 基础测试失败"
            exit 1
          fi
          
          if [ "${{ needs.extended-tests.result }}" = "success" ] || [ "${{ needs.extended-tests.result }}" = "skipped" ]; then
            echo "✅ 扩展测试通过"
          else
            echo "❌ 扩展测试失败"
            exit 1
          fi
          
          echo "🎉 MVP质量门禁通过"