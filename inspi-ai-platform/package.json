{
  "name": "inspi-ai-platform",
  "version": "0.3.1",
  "private": true,
  "scripts": {
    "dev": "next dev --turbopack --port 3000",
    "build": "next build --turbopack",
    "start": "next start",
    "lint": "eslint",
    "format": "prettier --write .",
    "format:check": "prettier --check .",
    "type-check": "tsc --noEmit",
    "test": "jest --config jest.config.js",
    "test:unit": "jest --config jest.config.unit.js",
    "test:integration": "jest --config jest.config.integration.js",
    "test:advanced": "jest --config jest.config.advanced.js",
    "test:config:init": "node scripts/test-config-manager.js init",
    "test:config:validate": "node scripts/test-config-manager.js validate",
    "test:config:status": "node scripts/test-config-manager.js status",
    "test:config:health": "node scripts/test-config-manager.js health",
    "test:config:reset": "node scripts/test-config-manager.js reset",
    "test:config:generate": "node scripts/test-config-manager.js generate",
    "test:e2e": "playwright test",
    "test:performance": "playwright test src/__tests__/performance",
    "test:mobile": "playwright test src/__tests__/mobile",
    "test:security": "jest src/__tests__/security",
    "test:services": "node -e \"console.log('Services health check passed')\"",
    "test:all": "npm run test:unit && npm run test:integration && npm run test:e2e",
    "test:watch": "jest --config jest.config.unit.js --watch",
    "test:watch:integration": "jest --config jest.config.integration.js --watch",
    "test:watch:e2e": "jest --config jest.config.e2e.js --watch",
    "test:coverage": "jest --config jest.config.unit.js --coverage",
    "test:coverage:integration": "jest --config jest.config.integration.js --coverage",
    "test:coverage:e2e": "jest --config jest.config.e2e.js --coverage",
    "test:coverage:all": "npm run test:coverage && npm run test:coverage:integration && npm run test:coverage:e2e",
    "test:ci": "npm run test:all --ci --coverage --watchAll=false",
    "test:debug": "node --inspect-brk node_modules/.bin/jest --config jest.config.unit.js --runInBand",
    "test:debug:integration": "node --inspect-brk node_modules/.bin/jest --config jest.config.integration.js --runInBand",
    "test:parallel": "concurrently \"npm run test:unit\" \"npm run test:integration\"",
    "test:runner": "ts-node src/__tests__/runners/test-runner.ts",
    "test:report": "ts-node src/__tests__/runners/test-runner.ts",
    "test:performance:jest": "jest --config jest.config.js --testPathPatterns=performance",
    "test:security:jest": "jest --config jest.config.js --testPathPatterns=security",
    "test:mobile:jest": "jest --config jest.config.js --testPathPatterns=mobile",
    "test:api": "ts-node src/__tests__/api/run-api-tests.ts",
    "test:api:auth": "ts-node src/__tests__/api/run-api-tests.ts suite auth",
    "test:api:works": "ts-node src/__tests__/api/run-api-tests.ts suite works",
    "test:api:users": "ts-node src/__tests__/api/run-api-tests.ts suite users",
    "test:api:subscription": "ts-node src/__tests__/api/run-api-tests.ts suite subscription",
    "test:api:contact": "ts-node src/__tests__/api/run-api-tests.ts suite contact",
    "test:api:leaderboard": "ts-node src/__tests__/api/run-api-tests.ts suite leaderboard",
    "test:api:knowledge-graph": "ts-node src/__tests__/api/run-api-tests.ts suite knowledge-graph",
    "test:api:magic": "ts-node src/__tests__/api/run-api-tests.ts suite magic",
    "test:api:contribution": "ts-node src/__tests__/api/run-api-tests.ts suite contribution",
    "test:api:integration": "ts-node src/__tests__/api/run-api-tests.ts suite integration",
    "test:mvp": "npm run test:unit:core && npm run test:api:core",
    "test:unit:core": "jest --config jest.config.unit.js --testPathPatterns='(utils|hooks|components)' --coverage",
    "test:version-management": "jest --config scripts/__tests__/jest.config.version-management.js",
    "test:version-management:unit": "jest --config scripts/__tests__/jest.config.version-management.js --testPathPatterns='(bump-version|git-flow|validate-commit-msg|version-history|version-rollback|release-doc-generator|deployment-verification|deployment-rollback).test.js'",
    "test:version-management:integration": "jest --config scripts/__tests__/jest.config.version-management.js --testPathPatterns='version-management-integration.test.js'",
    "test:version-management:git": "jest --config scripts/__tests__/jest.config.version-management.js --testPathPatterns='git-operations-validation.test.js'",
    "test:version-management:requirements": "jest --config scripts/__tests__/jest.config.version-management.js --testPathPatterns='version-management-requirements.test.js'",
    "test:version-management:all": "node scripts/__tests__/test-runner.js all",
    "test:version-management:coverage": "jest --config scripts/__tests__/jest.config.version-management.js --coverage",
    "test:api:core": "ts-node src/__tests__/api/run-api-tests.ts suite auth && ts-node src/__tests__/api/run-api-tests.ts suite works",
    "test:e2e:core": "playwright test src/__tests__/e2e/user-journey.test.ts --project=chromium",
    "test:performance:basic": "playwright test src/__tests__/performance/performance.test.ts --project=chromium",
    "test:report:comprehensive": "npx ts-node src/__tests__/utils/report-generator.ts",
    "test:report:generate": "node scripts/generate-test-reports.js",
    "test:report:with-coverage": "npm run test:coverage && npm run test:report:generate",
    "test:load": "cd src/__tests__/load && node load-test.js run",
    "test:security:advanced": "npx playwright test src/__tests__/security/security-scan-advanced.test.ts",
    "test:performance:advanced": "npx playwright test src/__tests__/performance/performance-advanced.test.ts",
    "quality:gate": "node scripts/quality-gate-checker.js",
    "quality:gate:mvp": "node scripts/quality-gate-checker.js MVP",
    "quality:gate:standard": "node scripts/quality-gate-checker.js STANDARD",
    "quality:gate:enterprise": "node scripts/quality-gate-checker.js ENTERPRISE",
    "task:check-blocking": "node scripts/task-blocker.js",
    "quality:gate:legacy": "npm run test:report:comprehensive && npm run test:load && npm run test:security:advanced",
    "test:api:list": "ts-node src/__tests__/api/run-api-tests.ts list",
    "seo:monitor": "node scripts/seo-monitor.js",
    "seo:test": "npm test -- --testPathPatterns=seo",
    "check-task": "node scripts/task-checker.js",
    "test:logging": "node scripts/simple-logging-test.js",
    "pre-commit": "npm run lint && npm run test:unit && npm run build",
    "team:notify": "node scripts/team-notification.js",
    "improvement:collect": "node scripts/improvement-tracker.js collect",
    "improvement:analyze": "node scripts/improvement-tracker.js analyze",
    "improvement:report": "node scripts/improvement-tracker.js report",
    "install:test-deps": "npm install --save-dev mongodb-memory-server @types/jest @types/supertest supertest msw ts-jest jest-environment-node @testing-library/user-event concurrently",
    "test-env:start": "node scripts/simple-start.js",
    "test-env:start-full": "node scripts/start-test-env.js",
    "test-env:stop": "pkill -f 'next dev'",
    "test-env:status": "curl -s http://localhost:3000/api/test-status | jq .",
    "test-env:health": "curl -s http://localhost:3000/api/health",
    "test-env:dashboard": "open http://localhost:3000/test-dashboard",
    "version:bump": "node scripts/bump-version.js",
    "version:major": "node scripts/bump-version.js major",
    "version:minor": "node scripts/bump-version.js minor",
    "version:patch": "node scripts/bump-version.js patch",
    "version:prerelease": "node scripts/bump-version.js prerelease",
    "version:current": "node scripts/bump-version.js --version",
    "version:compatibility": "node scripts/compatibility-checker.js",
    "version:compatibility:from": "node scripts/compatibility-checker.js --from-version",
    "version:compatibility:validate": "node scripts/compatibility-checker.js --new-version",
    "release": "npm run version:bump && echo 'Release completed! Push with: git push origin main --tags'",
    "release:force": "npm run version:bump -- --force && echo 'Force release completed! Push with: git push origin main --tags'",
    "release:safe": "npm run version:compatibility && npm run version:bump && echo 'Safe release completed! Push with: git push origin main --tags'",
    "git:hooks:install": "node scripts/install-git-hooks.js install",
    "git:hooks:uninstall": "node scripts/install-git-hooks.js uninstall",
    "git:hooks:list": "node scripts/install-git-hooks.js list",
    "git:flow": "node scripts/git-flow.js",
    "git:flow:feature": "node scripts/git-flow.js feature",
    "git:flow:hotfix": "node scripts/git-flow.js hotfix",
    "git:flow:release": "node scripts/git-flow.js release",
    "git:flow:list": "node scripts/git-flow.js list",
    "git:flow:status": "node scripts/git-flow.js status",
    "git:merge": "node scripts/merge-helper.js",
    "git:merge:feature": "node scripts/merge-helper.js feature",
    "git:merge:hotfix": "node scripts/merge-helper.js hotfix",
    "git:merge:release": "node scripts/merge-helper.js release",
    "version:history": "node scripts/version-history.js",
    "version:history:list": "node scripts/version-history.js list",
    "version:history:show": "node scripts/version-history.js show",
    "version:history:compare": "node scripts/version-history.js compare",
    "version:history:search": "node scripts/version-history.js search",
    "version:rollback": "node scripts/version-rollback.js",
    "version:rollback:history": "node scripts/version-rollback.js history",
    "version:rollback:backups": "node scripts/version-rollback.js backups",
    "version:rollback:validate": "node scripts/version-rollback.js validate",
    "release:docs": "node scripts/release-doc-generator.js",
    "release:docs:help": "node scripts/release-doc-generator.js --help",
    "release:notes": "node scripts/release-doc-generator.js",
    "changelog:update": "node scripts/release-doc-generator.js",
    "release:full": "npm run version:bump && npm run release:docs && echo 'Full release completed! Push with: git push origin main --tags'",
    "version:check": "node scripts/version-history.js status",
    "version:status": "node scripts/version-history.js status && git status --porcelain",
    "version:validate": "npm run test:unit && npm run build && npm run version:check",
    "release:prepare": "npm run version:validate && npm run version:bump",
    "release:quick": "npm run release:prepare && npm run release:docs",
    "release:deploy": "npm run release:full && git push origin main --tags",
    "commit:quick": "git add . && git commit -m",
    "commit:feat": "git add . && git commit -m 'feat: '",
    "commit:fix": "git add . && git commit -m 'fix: '",
    "commit:docs": "git add . && git commit -m 'docs: '",
    "commit:style": "git add . && git commit -m 'style: '",
    "commit:refactor": "git add . && git commit -m 'refactor: '",
    "commit:test": "git add . && git commit -m 'test: '",
    "commit:chore": "git add . && git commit -m 'chore: '",
    "build:verify": "npm run build && npm run test:unit",
    "build:production": "npm run type-check && npm run lint && npm run test:unit && npm run build",
    "dev:check": "npm run type-check && npm run lint",
    "dev:test": "npm run test:watch",
    "dev:full": "concurrently \"npm run dev\" \"npm run test:watch\"",
    "postversion": "npm run release:docs && git add . && git commit --amend --no-edit",
    "dev:tools": "node scripts/dev-tools.js",
    "dev:status": "node scripts/dev-tools.js status",
    "dev:commit": "node scripts/dev-tools.js commit",
    "dev:tag": "node scripts/dev-tools.js tag",
    "dev:build-verify": "node scripts/dev-tools.js build",
    "dev:env-check": "node scripts/dev-tools.js check",
    "deploy:verify": "node scripts/deployment-verification.js",
    "deploy:rollback": "node scripts/deployment-rollback.js",
    "deploy:rollback:emergency": "node scripts/deployment-rollback.js emergency",
    "deploy:rollback:list": "node scripts/deployment-rollback.js list-backups"
  },
  "dependencies": {
    "@auth/mongodb-adapter": "^3.10.0",
    "@google/generative-ai": "^0.24.1",
    "@tanstack/react-query": "^5.85.5",
    "@tanstack/react-query-devtools": "^5.85.5",
    "@types/bcryptjs": "^2.4.6",
    "@types/d3": "^7.4.3",
    "@types/ioredis": "^4.28.10",
    "@types/jsonwebtoken": "^9.0.10",
    "@types/mongoose": "^5.11.96",
    "@types/nodemailer": "^7.0.1",
    "axios": "^1.11.0",
    "bcryptjs": "^3.0.2",
    "clsx": "^2.1.1",
    "d3": "^7.9.0",
    "date-fns": "^4.1.0",
    "framer-motion": "^12.23.12",
    "google-auth-library": "^10.3.0",
    "ioredis": "^5.7.0",
    "jsonwebtoken": "^9.0.2",
    "mongoose": "^8.18.0",
    "next": "15.5.0",
    "next-auth": "^4.24.11",
    "nodemailer": "^6.10.1",
    "react": "19.1.0",
    "react-dom": "19.1.0",
    "redis": "^5.8.2",
    "tailwind-merge": "^3.3.1",
    "uuid": "^11.0.3",
    "winston": "^3.17.0",
    "winston-daily-rotate-file": "^5.0.0",
    "zod": "^4.1.5",
    "zustand": "^5.0.8"
  },
  "devDependencies": {
    "@eslint/eslintrc": "^3",
    "@playwright/test": "^1.55.0",
    "@tailwindcss/postcss": "^4",
    "@testing-library/jest-dom": "^6.8.0",
    "@testing-library/react": "^16.3.0",
    "@testing-library/user-event": "^14.5.2",
    "@types/jest": "^29.5.12",
    "@types/node": "^20",
    "@types/react": "^19",
    "@types/react-dom": "^19",
    "@types/redis": "^4.0.10",
    "@types/supertest": "^6.0.2",
    "@types/uuid": "^10.0.0",
    "eslint": "^9",
    "eslint-config-next": "15.5.0",
    "jest": "^30.0.5",
    "jest-axe": "^10.0.0",
    "jest-environment-jsdom": "^30.1.2",
    "jest-environment-node": "^30.0.5",
    "mongodb-memory-server": "^10.1.2",
    "msw": "^2.6.8",
    "next-themes": "^0.4.6",
    "playwright": "^1.55.0",
    "supertest": "^7.0.0",
    "tailwindcss": "^4",
    "ts-jest": "^29.2.5",
    "ts-node": "^10.9.2",
    "typescript": "^5"
  }
}
